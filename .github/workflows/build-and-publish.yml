name: ðŸŽ‰Build and Publish
  
on:
  push:
    branches:
    - main
    paths:
      - '*/Project/Sources/**/*.4dm'
      - '*/Project/Sources/*/*.4DForm'
      - '*/Project/Sources/*.4DCatalog'  
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        description: semantic versioning
        options: 
        - patch
        - minor 
        - major
        required: true
      build_dir: 
        type: string
        default: build
      product_name: 
        type: string
        default: application
      notarytool_keychain_profile: 
        type: string
        default: notarytool
      build_project_path: 
        type: string
        default: application/Project/application.4DProject
      build_settings_path: 
        type: string
        default: application/Settings/buildApp.4DSettings
      test_startup_method: 
        type: string
        default: test
  
jobs:

  bump:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    uses: miyako/4D/.github/workflows/bump.yml@v1
    with:
      mode: ${{ github.event.inputs.mode }} 

  release:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: bump
    uses: miyako/4D/.github/workflows/create-release.yml@v1
    with:
      version: ${{ needs.bump.outputs.version }}
      mode: ${{ needs.bump.outputs.mode }} 

  development:
    if: ${{ github.event_name == 'push' }}
    runs-on: [macos, self-hosted]
    steps:
    
      - name: checkout 
        uses: actions/checkout@v4

      - name: get tool4d
        id: get
        uses: miyako/4D/.github/actions/tool4d-download@v1
        with:
          platform: macos
          branch: 20.x
          version: 20.3
          build: latest
          arch: arm    
          
      - name: run tests
        uses: ./.github/actions/run-tests
        with:
          tool4d_download_url: ${{ steps.get.outputs.tool4d_download_url }}
          tool4d_executable_path: ${{ steps.get.outputs.tool4d_executable_path }}
          startup_method: test
          project_path: ./application/Project/application.4DProject 

      - name: build macos
        id: build
        uses: miyako/4D/.github/actions/build-macos@v1
        with:
          deployment: false
          version: ''
          mode: ''
          upload_url: ''
          build_dir: build
          product_name: application
          notarytool_keychain_profile: ''
          build_project_path: application/Project/application.4DProject
          build_settings_path: application/Settings/buildApp.4DSettings
          build_product_folder_name: Final Application
          build_product_suffix: ''
    
  deployment:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: 
    - release
    runs-on: [macos, self-hosted]
    steps:
    
      - name: checkout 
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          
      - name: get tool4d
        id: get
        uses: miyako/4D/.github/actions/tool4d-download@v1
        with:
          platform: macos
          branch: 20.x
          version: 20.3
          build: latest
          arch: arm
          
      - name: build macos
        id: build
        uses: miyako/4D/.github/actions/build-macos@v1
        with:
          deployment: true
          version: ${{ needs.release.outputs.version }}
          mode: ${{ needs.release.outputs.mode }}
          upload_url: ${{ needs.release.outputs.upload_url }}
          build_dir: ${{ inputs.build_dir }}
          product_name: ${{ inputs.product_name }}
          notarytool_keychain_profile: ${{ inputs.notarytool_keychain_profile }}
          build_project_path: ${{ inputs.build_project_path }}
          build_settings_path: ${{ inputs.build_settings_path }}
          build_product_folder_name: Final Application
          build_product_suffix: ''
          
      - name: upload product
        if: ${{ steps.build.outputs.deployment == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.build.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.asset_path }}
          asset_name: ${{ steps.build.outputs.asset_name }}
          asset_content_type: application/octet-stream
            
