name: Build

on:
  push:
    branches:
      - main
    paths:
      - package.json
      
  workflow_call: 
    inputs:
      version: 
        required: true
        type: string
      mode: 
        required: true
        type: string

env: 
  DEVELOPER_ID: "Developer ID Application: keisuke miyako (Y69CWUC25B)"
  BUILD_DIR: build        
        
jobs:

  test:
    runs-on: [self-hosted]
  
    steps:
      - uses: actions/checkout@v4
      - name: download latest tool4d
        run: |        
          curl https://resources-download.4d.com/release/20.x/20.2/100959/mac/tool4d_v20.2_mac_arm.tar.xz -o tool4d.tar.xz -sL
          tar xvJf tool4d.tar.xz
      - name: run unit tests
        run: |
          tool4d.app/Contents/MacOS/tool4d ./application/Project/application.4DProject --startup-method=test --dataless
          UTestResult=`cat application/UTestResult.txt`
          value=`head -n 1 application/UTestResult.txt`
          rm application/UTestResult.txt
          if [ "$value" = "Unit tests failed" ]
          then
            exit 1
          fi
          
  compile:
    needs: test
    runs-on: [self-hosted]
    permissions: write-all
    
    steps:
      - name: checkout compiler repo
        uses: actions/checkout@v4
        with:
          repository: miyako/4d-class-compiler
          path: compiler
      - name: compile project
        run: |
          tool4d.app/Contents/MacOS/tool4d ./compiler/Project/compiler.4DProject --startup-method=localbuild --user-param=$PWD/application/Settings/buildApp.4DSettings,$PWD/application/Project/application.4DProject --dataless
      - name: prepare for distribution
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != null }}
        run: |
          PRODUCT_PATH=$PWD/$BUILD_DIR/application.app
          DMG_PATH=$PWD/$BUILD_DIR/application.dmg
          codesign --verbose --deep --timestamp --force --sign "$DEVELOPER_ID" --options=runtime $PRODUCT_PATH 
          hdiutil create -format UDBZ -plist -srcfolder $PRODUCT_PATH $DMG_PATH
          xcrun notarytool submit --keychain-profile "notarytool" $DMG_PATH --wait
          xcrun stapler staple $DMG_PATH
      - name: create release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ inputs.version }}
          release_name: ${{ inputs.version }}
          draft: false
          prerelease: false     
      - name: upload product
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${BUILD_DIR}/application.dmg
          asset_name: application.dmg
          asset_content_type: application/octet-stream
