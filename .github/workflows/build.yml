name: Build

on:
  push:
    branches:
      - main
    paths:
      - package.json
      
  workflow_call: 
    inputs:
      version: 
        required: true
        type: string
      mode: 
        required: false
        type: string
env: 
  DEVELOPER_ID: "Developer ID Application: keisuke miyako (Y69CWUC25B)"
  BUILD_DIR: build
  PRODUCT_NAME: application
  NOTARYTOOL_KEYCHAIN_PROFILE: notarytool
  TOOL4D_PRODUCT: 20.x 
  TOOL4D_VERSION: 20.2
  TOOL4D_BUILD: 100959
  TOOL4D_PLATFORM: mac
  TOOL4D_FILENAME: mac_arm
  
jobs:

  test:
    runs-on: [self-hosted]
  
    steps:
      - uses: actions/checkout@v4
      - name: download latest tool4d
        run: |        
          curl https://resources-download.4d.com/release/$TOOL4D_PRODUCT/$TOOL4D_VERSION/$TOOL4D_BUILD/$TOOL4D_PLATFORM/tool4d_v$TOOL4D_VERSION_$TOOL4D_FILENAME.tar.xz -o tool4d.tar.xz -sL
          tar xvJf tool4d.tar.xz
      - name: run unit tests
        run: |
          tool4d.app/Contents/MacOS/tool4d ./application/Project/application.4DProject --startup-method=test --dataless
          UTestResult=`cat application/UTestResult.txt`
          value=`head -n 1 application/UTestResult.txt`
          rm application/UTestResult.txt
          if [ "$value" = "Unit tests failed" ]
          then
            exit 1
          fi
          
  compile:
    needs: test
    runs-on: [self-hosted]

    steps:
      - name: checkout compiler repo
        uses: actions/checkout@v4
        with:
          repository: miyako/4d-class-compiler
          path: compiler
      - name: compile project
        run: |
          tool4d.app/Contents/MacOS/tool4d ./compiler/Project/compiler.4DProject --startup-method=localbuild --user-param=$PWD/application/Settings/buildApp.4DSettings,$PWD/application/Project/application.4DProject --dataless
      - name: prepare for distribution
        if: ${{ github.event_name == 'workflow_call' }}
        run: |
          PRODUCT_PATH=$PWD/$BUILD_DIR/$PRODUCT_NAME.app
          DMG_PATH=$PWD/$BUILD_DIR/$PRODUCT_NAME.dmg
          codesign --verbose --deep --timestamp --force --sign "$DEVELOPER_ID" --options=runtime $PRODUCT_PATH 
          hdiutil create -format UDBZ -plist -srcfolder $PRODUCT_PATH $DMG_PATH
          xcrun notarytool submit --keychain-profile "$NOTARYTOOL_KEYCHAIN_PROFILE" $DMG_PATH --wait
          xcrun stapler staple $DMG_PATH          
      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ inputs.version }}
          release_name: ${{ inputs.mode + ' ' inputs.version }}
          draft: false
          prerelease: false          
      - uses: actions/upload-artifact@v4
        with:
          name: ${PRODUCT_NAME}
          path: ./${BUILD_DIR}/*.dmg
