name: Test

on:
  push:
    branches:
      - main
      
  workflow_dispatch: 
   inputs:
      windows:
        type: boolean
        description: windows-latest
        default: true
      macos:
        type: boolean
        description: macos-latest
        default: true
env: 

  TOOL4D_URL: https://resources-download.4d.com/release/
  TOOL4D_PLATFORM: ""
  TOOL4D_BRANCH: 20.x
  TOOL4D_VERSION: 20.2
  TOOL4D_BUILD: latest 
  TOOL4D_SUFFIX: ""
  TOOL4D_EXECUTABLE_PATH: ""
  CURL_DOWNLOAD_URL: ""
  PROJECT_STARTUP_METHOD: test
  PROJECT_PATH: ./application/Project/application.4DProject
  
jobs:
  test: 
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}   
    steps:
      - name: get platform windows
        if: ${{ (matrix.os == 'windows-latest') && (inputs.windows) }}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("platform=windows") >> $env:GITHUB_ENV
          
      - name: get platform macos
        if: ${{ (matrix.os == 'macos-latest') && (inputs.macos) }}
        run: |
          echo "platform=macos" >> $GITHUB_ENV
          
      - name: setup windows
        if: ${{ env.platform == 'windows' }}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("TOOL4D_PLATFORM=win") >> $env:GITHUB_ENV
          echo ("TOOL4D_SUFFIX=") >> $env:GITHUB_ENV
          echo ("TOOL4D_EXECUTABLE_PATH=") >> $env:GITHUB_ENV
          
      - name: setup windows
        if: ${{ env.platform == 'windows' }}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("CURL_DOWNLOAD_URL="+$env:TOOL4D_URL+$env:TOOL4D_BRANCH+"/"+$env:TOOL4D_VERSION+"/"+$env:TOOL4D_BUILD+"/"+$env:TOOL4D_PLATFORM+"/tool4d_v"+$env:TOOL4D_VERSION+"_"+$env:TOOL4D_PLATFORM+$env:TOOL4D_SUFFIX+".tar.xz") >> $env:GITHUB_ENV
          
      - name: setup macos   
        if: ${{ env.platform == 'macos' }}
        run: |
          echo "TOOL4D_PLATFORM=mac" >> $GITHUB_ENV
          echo "TOOL4D_SUFFIX=_x86" >> $GITHUB_ENV  
          echo "TOOL4D_EXECUTABLE_PATH=tool4d.app/Contents/MacOS/tool4d" >> $GITHUB_ENV
          
      - name: setup macos  
        if: ${{ env.platform == 'macos' }}
        run: |          
          echo "CURL_DOWNLOAD_URL=${TOOL4D_URL}${TOOL4D_BRANCH}/${TOOL4D_VERSION}/${TOOL4D_BUILD}/${TOOL4D_PLATFORM}/tool4d_v${TOOL4D_VERSION}_${TOOL4D_PLATFORM}${TOOL4D_SUFFIX}.tar.xz" >> $GITHUB_ENV

      - name: checkout repository
        if: ${{ env.platform }}
        uses: actions/checkout@v4

      - name: download tool4d
        if: ${{ env.platform }}
        run: |          
          curl "${CURL_DOWNLOAD_URL}" -o tool4d.tar.xz -sL
          tar xvJf tool4d.tar.xz
        shell: bash  
        
# end of generic code
# customise the fail condition here
# in the example below, we test the result log file

      - name: unit tests macos
        if: ${{ env.platform }}
        run: |
          ${TOOL4D_EXECUTABLE_PATH} ${PROJECT_PATH} --startup-method=${PROJECT_STARTUP_METHOD} --dataless
          UTestResult=`cat application/UTestResult.txt`
          value=`head -n 1 application/UTestResult.txt`
          rm application/UTestResult.txt
          if [ "$value" = "Unit tests failed" ]
          then
            exit 1
          fi
        shell: bash
