name: Test

on:
  push:
    branches:
      - main
      
  workflow_dispatch: 

env: 

  TOOL4D_URL: https://resources-download.4d.com/release/
  TOOL4D_PLATFORM: ""
  TOOL4D_BRANCH: 20.x
  TOOL4D_VERSION: 20.2
  TOOL4D_BUILD: latest 
  TOOL4D_SUFFIX: ""
  TOOL4D_EXECUTABLE_PATH: ""
  CURL_DOWNLOAD_URL: ""
  PROJECT_STARTUP_METHOD: test
  PROJECT_PATH: ./application/Project/application.4DProject
  
jobs:
  test: 
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: setup windows #1
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("TOOL4D_PLATFORM=win") >> $env:GITHUB_ENV
          echo ("TOOL4D_SUFFIX=") >> $env:GITHUB_ENV
          echo ("TOOL4D_EXECUTABLE_PATH=") >> $env:GITHUB_ENV
      - name: setup windows #2
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("CURL_DOWNLOAD_URL=${TOOL4D_URL}/${TOOL4D_BRANCH}/${TOOL4D_VERSION}/${TOOL4D_BUILD}/${TOOL4D_PLATFORM}/tool4d_v${TOOL4D_VERSION}_${TOOL4D_PLATFORM}${TOOL4D_SUFFIX}.tar.xz") >> $env:GITHUB_ENV
      - name: setup macos#1    
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          echo "TOOL4D_PLATFORM=mac" >> $GITHUB_ENV
          echo "TOOL4D_SUFFIX=_arm" >> $GITHUB_ENV  
          echo "TOOL4D_EXECUTABLE_PATH=tool4d.app/Contents/MacOS/tool4d" >> $GITHUB_ENV
      - name: setup macos#2    
        if: ${{ matrix.os == 'macos-latest' }}
        run: |          
          # echo "CURL_DOWNLOAD_URL=${TOOL4D_URL}/${TOOL4D_BRANCH}/${TOOL4D_VERSION}/${TOOL4D_BUILD}/${TOOL4D_PLATFORM}/tool4d_v${TOOL4D_VERSION}_${TOOL4D_PLATFORM}${TOOL4D_SUFFIX}.tar.xz" >> $GITHUB_ENV
      - name: checkout repository
        uses: actions/checkout@v4
      - name: download tool4d
        run: |          
          curl "${CURL_DOWNLOAD_URL}" -o tool4d.tar.xz -sL
          tar xvJf tool4d.tar.xz

# end of generic code
# customise the fail condition here
# in the example below, we test the result log file

      - name: run unit tests
        run: |
          $TOOL4D_EXECUTABLE_PATH $PROJECT_PATH --startup-method=$PROJECT_STARTUP_METHOD --dataless
          UTestResult=`cat application/UTestResult.txt`
          value=`head -n 1 application/UTestResult.txt`
          rm application/UTestResult.txt
          if [ "$value" = "Unit tests failed" ]
          then
            exit 1
          fi
