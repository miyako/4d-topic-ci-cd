name: Test

on:
  push:
    branches:
      - main
      
  workflow_dispatch: 
   inputs:
      windows:
        type: boolean
        description: windows-latest
        default: true
      macos:
        type: boolean
        description: macos-latest
        default: true

  workflow_call:
    inputs:
      windows:
        required: true
        type: boolean
      macos:
        required: true
        type: boolean

env: 

  TOOL4D_URL: https://resources-download.4d.com/release/
  TOOL4D_PLATFORM: ""
  TOOL4D_BRANCH: 20.x
  TOOL4D_VERSION: 20.2
  TOOL4D_BUILD: latest 
  TOOL4D_SUFFIX: ""
  TOOL4D_EXECUTABLE_PATH: ""
  CURL_DOWNLOAD_URL: ""
  PROJECT_STARTUP_METHOD: test
  PROJECT_PATH: ./application/Project/application.4DProject
  
jobs:

  get:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}    
    
    # uses: miyako/4D/.github/workflows/get-tool.yml@v1
    # with:
    #   platform: ${{ toJSON(matrix.os) }}
    #   labels: ${{ toJSON(matrix.os) }}
    #   branch: 20.x
    #   version: 20.2
    #   build: latest
    
    steps:
    - name: echo 
      run: |
        echo "TOOL4D_BUILD: ${TOOL4D_BUILD}"
      env: 
        TOOL4D_BUILD: ${{ env.TOOL4D_BUILD }}
        TOOL4D_BRANCH: ${{ env.TOOL4D_BRANCH }}
        TOOL4D_VERSION: ${{ env.TOOL4D_VERSION }}
        TOOL4D_PLATFORM: ${{ env.TOOL4D_PLATFORM }}
      
  # get: 
  #   strategy:
  #     matrix:
  #       os: [windows-latest, macos-latest]
  #   uses: miyako/4D/.github/workflows/get-tool.yml@v1
  #   with:
  #     platform: ${{ matrix.os }}
  #     labels: ${{ matrix.os }}
  #     branch: 20.x
  #     version: 20.2
  #     build: latest
      
  checkout:
    needs: get
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}     
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        
# end of generic code
# customise the fail condition here
# in the example below, we test the result log file
   
  test:
    needs: checkout
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}     
    steps:
    - name: unit tests
      run: |
        ${TOOL4D_EXECUTABLE_PATH} ${PROJECT_PATH} --startup-method=${PROJECT_STARTUP_METHOD} --dataless
        UTestResult=`cat application/UTestResult.txt`
        value=`head -n 1 application/UTestResult.txt`
        rm application/UTestResult.txt
        if [ "$value" = "Unit tests failed" ]
        then
          exit 1
        fi
      shell: bash
      env:
        TOOL4D_EXECUTABLE_PATH: ${{ steps.get.outputs.tool4d_executable_path }}
        CURL_DOWNLOAD_URL: ${{ steps.get.outputs.tool4d_download_url }}
